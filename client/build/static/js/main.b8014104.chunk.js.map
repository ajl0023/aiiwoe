{"version":3,"sources":["components/ChatBox/ChatBox.module.scss","components/ChatTable/ChatTable.module.scss","images/cups/black.png","images/cups/cafe.png","images/cups/cap.png","images/cups/decaf.png","images/cups/espresso.png","images/cups/latte.png","images/cups/mocha.png","images/cups/rist.png","ably.js","images/logo.png","components/Home/Home.jsx","socketInstance.js","images/cups/cups.js","components/ChatBox/ChatBox.jsx","components/ChatTable/ChatTable.jsx","components/CupSelect/CupSelect.jsx","components/Group/UserBar/UserBar.js","components/Group/Group.jsx","components/Individual/Users/Users.js","components/Individual/Individual.js","images/background.png","components/Navbar/images/logo.png","components/Navbar/Navbar.js","App.js","index.js","images/cups/affogato.png"],"names":["module","exports","currChannel","useStyles","makeStyles","theme","buttonMain","width","margin","spacing","backgroundColor","backDrop","contentContainer","zIndex","buttonHeader","textTransform","link","textDecoration","display","description","fontSize","logo","maxWidth","height","Home","props","useEffect","clearUser","classes","Container","className","Box","gridGap","alignItems","justifyContent","flexDirection","color","src","alt","Typography","align","descriTypographytion","buttonContainer","to","Button","onClick","setChatType","fullWidth","variant","io","clientId","Math","random","toString","generateId","id","name","console","log","ably","Ably","key","roomid","channel","channels","get","attach","err","error","affogato","require","black","cafe","cap","decaf","espresso","latte","mocha","rist","cupObj","cups","map","cup","default","match","chatBox","background","objectFit","mainInput","sendButton","ChatBox","useTheme","matches","useMediaQuery","breakpoints","up","useMemo","useState","input","setInput","messages","setMessages","subscribe","msg","prev","copy","push","position","padding","overflow","messageContainer","i","messageOut","messageIn","data","bgcolor","text","styles","FormControl","InputLabel","style","paddingLeft","htmlFor","TextField","value","onChange","e","target","labelWidth","disabled","length","publish","currentUser","chatTable","borderRadius","content","paddingBottom","ChatTable","circleArr","setCircleArr","theta","PI","containerRef","useRef","circleRef","resize","mainHeight","current","parseInt","window","getComputedStyle","slice","radius","offsetWidth","circleArray","users","circle","posx","round","cos","posy","sin","top","left","onresize","ref","ele","containerHeader","cupImage","CupSelect","location","useLocation","taken","setTaken","token","chatType","pathname","split","axios","post","type","then","presence","presenceMsg","members","userObj","reduce","obj","user","Object","keys","opacity","pointer","selectUser","flexShrink","UserBar","Group","setUsers","enter","usersCopy","Grid","container","xs","sm","item","Users","borderBottom","Individual","cursor","withRouter","history","useHistory","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","App","setCurrentUser","setClientId","createTheme","typography","fontFamily","join","responsiveFontSizes","paddingTop","ThemeProvider","CssBaseline","exact","path","getClientId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8014104.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow-right\":\"ChatBox_arrow-right__2bSSk\",\"arrow-left\":\"ChatBox_arrow-left__y7KiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"ChatTable_circle__17_TH\"};","export default __webpack_public_path__ + \"static/media/black.ec640ce9.png\";","export default __webpack_public_path__ + \"static/media/cafe.ddb7ac5b.png\";","export default __webpack_public_path__ + \"static/media/cap.b5e88f08.png\";","export default __webpack_public_path__ + \"static/media/decaf.7521de77.png\";","export default __webpack_public_path__ + \"static/media/espresso.1c8c2501.png\";","export default __webpack_public_path__ + \"static/media/latte.d99c1f52.png\";","export default __webpack_public_path__ + \"static/media/mocha.c1adc1f0.png\";","export default __webpack_public_path__ + \"static/media/rist.14fb25c5.png\";","import * as Ably from \"ably\";\r\nlet currChannel;\r\nlet clientId = Math.random().toString();\r\nconst generateId = (id, name) => {\r\n  console.log(5323230);\r\n  if (!currChannel) {\r\n    var ably = new Ably.Realtime({\r\n      key: \"8ZlqBg.IDAVaA:2m8tkZT0rhHi58Mv\",\r\n      clientId: clientId,\r\n    });\r\n    let roomid = id;\r\n\r\n    var channel = ably.channels.get(roomid);\r\n\r\n    channel.attach(function (err) {\r\n      if (err) {\r\n        return console.error(\"Error attaching to the channel\");\r\n      }\r\n      console.log(id);\r\n      console.log(\"We are now attached to the channel\");\r\n    });\r\n    currChannel = channel;\r\n    return channel;\r\n  }\r\n  return currChannel;\r\n};\r\n\r\nexport { generateId, clientId };\r\n","export default __webpack_public_path__ + \"static/media/logo.3b2d4623.png\";","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\n\r\nimport logo from \"../../images/logo.png\";\r\nimport { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonMain: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"rgb(186 167 156)\",\r\n    },\r\n  },\r\n  backDrop: {\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n  },\r\n  contentContainer: {\r\n    zIndex: \"2\",\r\n  },\r\n  buttonHeader: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  link: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n\r\n    display: \"block\",\r\n  },\r\n  description: {\r\n    fontSize: \"2em\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"70%\",\r\n    width: \"400px\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.clearUser();\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.contentContainer}>\r\n      <Box\r\n        gridGap=\"20px\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n        color=\"white\"\r\n      >\r\n        <img className={classes.logo} src={logo} alt=\"\" />\r\n        <Typography align=\"center\" className={classes.descriTypographytion}>\r\n          Experience the complicated side of love, together.\r\n        </Typography>\r\n        <Box textTransform=\"uppercase\" className={classes.buttonContainer}>\r\n          <Typography className={classes.buttonHeader} align=\"center\">\r\n            Match me with a:\r\n          </Typography>\r\n          <Box className={classes.buttonMain}>\r\n            <Link to=\"/chat/group\" className={classes.link}>\r\n              <Button\r\n                onClick={() => {\r\n                  props.setChatType(\"group\");\r\n                }}\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Group\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to=\"/chat/individual\" className={classes.link}>\r\n              <Button fullWidth variant=\"contained\">\r\n                Individual\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import io from \"socket.io-client\";\r\n\r\nexport let getSocket = io(\"localhost:5000\");\r\n//localhost:5500\r\nexport const getNewSocket = () => {\r\n  getSocket = io(\"localhost:5000\");\r\n};\r\n","const affogato = require(\"./affogato.png\");\r\n\r\nconst black = require(\"./black.png\");\r\nconst cafe = require(\"./cafe.png\");\r\nconst cap = require(\"./cap.png\");\r\nconst decaf = require(\"./decaf.png\");\r\nconst espresso = require(\"./espresso.png\");\r\nconst latte = require(\"./latte.png\");\r\nconst mocha = require(\"./mocha.png\");\r\nconst rist = require(\"./rist.png\");\r\nexport const cupObj = {\r\n  affogato,\r\n  black,\r\n  cafe,\r\n  cap,\r\n  decaf,\r\n  espresso,\r\n  latte,\r\n  mocha,\r\n  rist,\r\n};\r\nexport const cups = [\r\n  affogato,\r\n  black,\r\n  cafe,\r\n  cap,\r\n  decaf,\r\n  espresso,\r\n  latte,\r\n  mocha,\r\n  rist,\r\n].map((cup) => {\r\n  const regex = /\\/(\\w+)\\./;\r\n\r\n  cup[\"name\"] = cup.default.match(regex)[1];\r\n  return cup;\r\n});\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { generateId, clientId } from \"../../ably\";\r\nimport { cupObj } from \"../../images/cups/cups\";\r\nimport { getSocket } from \"../../socketInstance\";\r\nimport styles from \"./ChatBox.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatBox: {\r\n    background: \"rgba(255, 255, 255, 0.5)\",\r\n    height: \"500px\",\r\n  },\r\n  cup: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    objectFit: \"contain\",\r\n  },\r\n  mainInput: {\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n  },\r\n  sendButton: {\r\n    \"&.MuiButton-contained.Mui-disabled\": {\r\n      background: \"rgba(255, 255, 255, 0.2)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatBox = (props) => {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const channel = useMemo(() => {\r\n    return generateId();\r\n  });\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  const handleMsg = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const sendMsg = () => {\r\n    channel.publish(\"message sent\", { text: input, ...props.currentUser });\r\n\r\n    setInput(\"\");\r\n  };\r\n  useEffect(() => {\r\n    // getSocket.on(\"sendMessage\", (msg) => {\r\n    //\r\n    // });\r\n\r\n    channel.subscribe(function (msg) {\r\n      console.log(msg);\r\n      setMessages((prev) => {\r\n        const copy = [...prev];\r\n        copy.push(msg);\r\n        return copy;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Box\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent={matches ? \"space-between\" : \"center\"}\r\n      >\r\n        <Box\r\n          className={classes.chatBox}\r\n          width=\"500px\"\r\n          position=\"relative\"\r\n          height=\"100%\"\r\n        >\r\n          <Box\r\n            height=\"100%\"\r\n            padding=\"5px 15px\"\r\n            overflow=\"auto\"\r\n            className={classes.messageContainer}\r\n          >\r\n            {messages.map((msg, i) => {\r\n              return (\r\n                <Box\r\n                  key={i}\r\n                  gridGap=\"5px\"\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  flexDirection={\r\n                    msg.clientId === clientId ? \"row\" : \"row-reverse\"\r\n                  }\r\n                  justifyContent=\"start\"\r\n                  className={\r\n                    msg.clientId === clientId\r\n                      ? classes.messageOut\r\n                      : classes.messageIn\r\n                  }\r\n                  padding=\"5px 15px\"\r\n                >\r\n                  <img\r\n                    className={classes.cup}\r\n                    src={cupObj[msg.data.name].default}\r\n                    alt=\"\"\r\n                  />\r\n                  <Box\r\n                    position=\"relative\"\r\n                    padding=\"5px 15px\"\r\n                    bgcolor={msg.clientId === clientId ? \"white\" : \"#c06c48\"}\r\n                  >\r\n                    <li>{msg.data.text}</li>\r\n                    <div\r\n                      className={\r\n                        styles[\r\n                          msg.clientId === clientId\r\n                            ? \"arrow-right\"\r\n                            : \"arrow-left\"\r\n                        ]\r\n                      }\r\n                    ></div>\r\n                  </Box>\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n            <FormControl variant=\"filled\" fullWidth>\r\n              <InputLabel\r\n                style={{ paddingLeft: \"20px\" }}\r\n                htmlFor=\"outlined-adornment-amount\"\r\n              >\r\n                Type Here...\r\n              </InputLabel>\r\n              <TextField\r\n                className={classes.mainInput}\r\n                value={input}\r\n                variant=\"filled\"\r\n                onChange={handleMsg}\r\n                labelWidth={60}\r\n                id=\"outlined-adornment-amount\"\r\n                labelWidth={90}\r\n              />\r\n            </FormControl>\r\n\r\n            <Button\r\n              className={classes.sendButton}\r\n              disabled={input.length === 0}\r\n              onClick={sendMsg}\r\n              variant=\"contained\"\r\n            >\r\n              Send\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Container, useMediaQuery } from \"@material-ui/core\";\r\n\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  useTheme,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport style from \"./ChatTable.module.scss\";\r\nimport { cupObj } from \"../../images/cups/cups\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    width: \"400px\",\r\n\r\n    background: \"rgba(80, 41, 0, 0.7)\",\r\n    borderRadius: \"50%\",\r\n    position: \"relative\",\r\n    \"&::before\": {\r\n      content: \"''\",\r\n      display: \"block\",\r\n      paddingBottom: \"100%\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatTable = (props) => {\r\n  const [circleArr, setCircleArr] = useState([]);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  var theta = [\r\n    Math.PI / 2,\r\n    Math.PI / 4,\r\n    2 * Math.PI,\r\n    7 * (Math.PI / 4),\r\n    (3 * Math.PI) / 2,\r\n    5 * (Math.PI / 4),\r\n    3 * (Math.PI / 4),\r\n    Math.PI,\r\n  ];\r\n  const containerRef = useRef();\r\n\r\n  const classes = useStyles();\r\n  const cupPos = useMemo(() => {});\r\n  const circleRef = useRef([]);\r\n  function resize() {\r\n    setCircleArr(() => {\r\n      var mainHeight = containerRef.current\r\n        ? parseInt(\r\n            window.getComputedStyle(containerRef.current).height.slice(0, -2)\r\n          )\r\n        : 0;\r\n      circleRef.current = [];\r\n      var radius = containerRef.current.offsetWidth / 2;\r\n\r\n      let circleArray = circleRef.current;\r\n      for (var i = 0; i < props.users.length; i++) {\r\n        var circle = { style: {} };\r\n        circle.src = cupObj[props.users[i].data].default;\r\n\r\n        circleArray.push(circle);\r\n        circleArray[i].posx = Math.round(radius * Math.cos(theta[i])) + \"px\";\r\n        circleArray[i].posy = Math.round(radius * Math.sin(theta[i])) + \"px\";\r\n        circleArray[i].style.position = \"absolute\";\r\n        circleArray[i].style.top =\r\n          mainHeight / 2 -\r\n          parseInt(circleArray[i].posy.slice(0, -2)) -\r\n          40 +\r\n          \"px\";\r\n        circleArray[i].style.left =\r\n          mainHeight / 2 +\r\n          parseInt(circleArray[i].posx.slice(0, -2)) -\r\n          20 +\r\n          \"px\";\r\n      }\r\n      return circleArray;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    resize();\r\n    window.onresize = () => {\r\n      resize();\r\n    };\r\n  }, [props.users]);\r\n\r\n  return (\r\n    <Box\r\n      display={matches ? \"flex\" : \"none\"}\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Box\r\n        ref={containerRef}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        className={classes.chatTable}\r\n      >\r\n        {circleArr.map((ele) => {\r\n          return (\r\n            <img\r\n              className={`${style[\"circle\"]}`}\r\n              src={ele.src}\r\n              style={{\r\n                ...ele.style,\r\n              }}\r\n              alt=\"\"\r\n            />\r\n          );\r\n        })}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatTable;\r\n","import { Box, Typography, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport affogato from \"../../images/cups/affogato.png\";\r\nimport { cups } from \"../../images/cups/cups\";\r\nimport { generateId } from \"../../ably.js\";\r\nimport axios from \"axios\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    borderRadius: \"50%\",\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    background: \"red\",\r\n  },\r\n  containerHeader: {\r\n    color: \"white\",\r\n    padding: \"5px 15px\",\r\n  },\r\n  cupImage: {\r\n    width: \"40px\",\r\n  },\r\n}));\r\n\r\nconst CupSelect = (props) => {\r\n  const location = useLocation();\r\n\r\n  const classes = useStyles();\r\n  const [taken, setTaken] = useState();\r\n\r\n  useEffect(() => {\r\n    const chatType = location.pathname.split(\"/\")[2];\r\n\r\n    function getToken(token) {\r\n      axios\r\n        .post(\"/token\", {\r\n          token,\r\n          type: chatType,\r\n        })\r\n        .then((data) => {\r\n          generateId(data.data.token).presence.subscribe(function (\r\n            presenceMsg\r\n          ) {\r\n            generateId(data.data.token).presence.get(function (err, members) {\r\n              const userObj = members.reduce((obj, user) => {\r\n                obj[user.data] = user;\r\n                return obj;\r\n              }, {});\r\n              setTaken(userObj);\r\n\r\n              console.log(\r\n                \"There are now \" +\r\n                  members.length +\r\n                  \" clients present on this channel\"\r\n              );\r\n            });\r\n          });\r\n        });\r\n    }\r\n    getToken();\r\n  }, []);\r\n\r\n  return (\r\n    <Box maxWidth=\"600px\" width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box width=\"100%\">\r\n        <Box\r\n          bgcolor=\"black\"\r\n          width=\"100%\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography className={classes.containerHeader}>\r\n            Select an avatar\r\n          </Typography>\r\n          <Typography className={classes.containerHeader}>\r\n            Users in Room : {taken ? Object.keys(taken).length : 0}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          padding=\"15px 20px\"\r\n          alignItems=\"center\"\r\n          bgcolor=\"white\"\r\n          display=\"flex\"\r\n          gridGap=\"15px\"\r\n          overflow=\"auto\"\r\n        >\r\n          {cups.map((cup) => {\r\n            if (taken && taken[cup.name]) {\r\n              return (\r\n                <img\r\n                  style={{\r\n                    opacity: \"60%\",\r\n                    pointer: \"none\",\r\n                  }}\r\n                  className={classes.cupImage}\r\n                  src={cup.default}\r\n                  alt=\"\"\r\n                />\r\n              );\r\n            }\r\n\r\n            return (\r\n              <img\r\n                onClick={() => props.selectUser(cup)}\r\n                className={classes.cupImage}\r\n                src={cup.default}\r\n                alt=\"\"\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CupSelect;\r\n","import { Box, Container, useMediaQuery } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  useTheme,\n  withStyles,\n} from \"@material-ui/core/styles\";\n\nimport { useEffect } from \"react\";\nimport { cupObj } from \"../../../images/cups/cups\";\n\nconst useStyles = makeStyles((theme) => ({\n  cup: {\n    width: \"10%\",\n    flexShrink: \"0.5\",\n  },\n  chatTable: {\n    borderRadius: \"50%\",\n    width: \"200px\",\n    height: \"200px\",\n    background: \"red\",\n  },\n}));\nconst UserBar = (props) => {\n  const [currentUser, setCurrentUser] = useState();\n  const theme = useTheme();\n\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  useEffect(() => {}, []);\n  const classes = useStyles();\n  const selectUser = (user) => {\n    setCurrentUser(user);\n  };\n  return (\n    <Box display={matches ? \"none\" : \"flex\"} gridGap=\"15px\">\n      {props.users.map((user) => {\n        return (\n          <>\n            <img\n              className={classes.cup}\n              src={cupObj[user.data].default}\n              alt=\"\"\n            />\n            <img\n              className={classes.cup}\n              src={cupObj[user.data].default}\n              alt=\"\"\n            />\n          </>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default UserBar;\n","import { Box, Container, Grid, Hidden } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  ThemeProvider,\r\n  withStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport { getSocket } from \"../../socketInstance\";\r\n\r\nimport ChatBox from \"../ChatBox/ChatBox\";\r\nimport ChatTable from \"../ChatTable/ChatTable\";\r\nimport CupSelect from \"../CupSelect/CupSelect\";\r\nimport { useEffect } from \"react\";\r\nimport { generateId } from \"../../ably.js\";\r\nimport UserBar from \"./UserBar/UserBar\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    borderRadius: \"50%\",\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    background: \"red\",\r\n  },\r\n}));\r\nconst Group = (props) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [room, setRoom] = useState();\r\n  useEffect(() => {\r\n    generateId().presence.enter(props.currentUser.name);\r\n  }, []);\r\n  useEffect(() => {\r\n    const channel = generateId();\r\n    channel.presence.subscribe((msg) => {\r\n      channel.presence.get((err, members) => {\r\n        const usersCopy = [...users];\r\n\r\n        usersCopy.push(...members);\r\n        setUsers(usersCopy);\r\n      });\r\n    });\r\n  }, []);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        padding=\"30px 15px\"\r\n      >\r\n        <Grid spacing={2} container alignItems=\"center\">\r\n          <Grid alignItems=\"center\" xs={12} sm={6} item>\r\n            <ChatTable clientId={props.clientId} users={users}></ChatTable>\r\n            <UserBar users={users}></UserBar>\r\n          </Grid>\r\n          <Grid xs={12} sm={6} item>\r\n            <ChatBox\r\n              clientId={props.clientId}\r\n              currentUser={props.currentUser}\r\n            ></ChatBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","import { Box, Container, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport { cupObj } from \"../../../images/cups/cups\";\nimport { useEffect } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  cup: {\n    width: \"60px\",\n  },\n}));\nconst Users = (props) => {\n  useEffect(() => {}, []);\n  const classes = useStyles();\n  console.log(props.users);\n  return (\n    <Box height=\"100%\" width=\"40%\">\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"flex-start\"\n        bgcolor=\"rgba(255, 255, 255, 0.5)\"\n      >\n        {props.users.map((user, i) => {\n          return (\n            <Box\n              color=\"white\"\n              padding=\"5px 15px\"\n              display=\"flex\"\n              gridGap=\"15px\"\n              width=\"100%\"\n              alignItems=\"center\"\n              borderBottom={\n                i !== props.users.length - 1 ? \"1px solid black\" : \"\"\n              }\n            >\n              <img\n                className={classes.cup}\n                src={cupObj[user.data].default}\n                alt=\"\"\n              />\n              <Typography>{user.data}</Typography>\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Users;\n","import { Box, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport Users from \"./Users/Users\";\nimport { generateId } from \"../../ably.js\";\nconst useStyles = makeStyles((theme) => ({\n  chatTable: {\n    borderRadius: \"50%\",\n    width: \"200px\",\n    height: \"200px\",\n    background: \"red\",\n  },\n}));\nconst Individual = (props) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    generateId().presence.enter(props.currentUser.name);\n  }, []);\n  const classes = useStyles();\n  useEffect(() => {\n    props.setChatType(\"individual\");\n    const channel = generateId();\n    channel.presence.subscribe((msg) => {\n      channel.presence.get((err, members) => {\n        const usersCopy = [...users];\n\n        usersCopy.push(...members);\n        setUsers(usersCopy);\n      });\n    });\n  }, []);\n  return (\n    <>\n      <Container maxWidth=\"xl\">\n        <Box\n          width=\"100%\"\n          height=\"100%\"\n          display=\"flex\"\n          gridGap=\"20px\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Users users={users}></Users>\n          <ChatBox\n            clientId={props.clientId}\n            currentUser={props.currentUser}\n          ></ChatBox>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Individual;\n","export default __webpack_public_path__ + \"static/media/background.23f7c3b9.png\";","export default __webpack_public_path__ + \"static/media/logo.76c5cc2c.png\";","import { Box, Container } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  withStyles,\n} from \"@material-ui/core/styles\";\nimport { getSocket } from \"../../socketInstance\";\n\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport ChatTable from \"../ChatTable/ChatTable\";\nimport CupSelect from \"../CupSelect/CupSelect\";\nimport { useEffect } from \"react\";\nimport logo from \"./images/logo.png\";\nimport { Link, useHistory, withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    width: \"100px\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Navbar = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <Box\n      position=\"absolute\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"3\"\n      bgcolor=\"#512905\"\n      padding=\"5px 15px\"\n    >\n      <img\n        onClick={() => {\n          history.push(\"/\");\n        }}\n        className={classes.logo}\n        src={logo}\n        alt=\"\"\n      />\n    </Box>\n  );\n};\n\nexport default withRouter(Navbar);\n","import React, { useState, useEffect } from \"react\";\nimport Home from \"./components/Home/Home\";\nimport Group from \"./components/Group/Group\";\nimport Individual from \"./components/Individual/Individual\";\nimport \"./App.css\";\nimport {\n  createTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Box, CssBaseline } from \"@material-ui/core\";\nimport background from \"./images/background.png\";\nimport CupSelect from \"./components/CupSelect/CupSelect\";\nimport Navbar from \"./components/Navbar/Navbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundImage: `url(${background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n  },\n  buttonMain: {\n    \"& > *\": {\n      width: \"100%\",\n      margin: theme.spacing(1),\n      backgroundColor: \"rgb(186 167 156)\",\n    },\n  },\n  backDrop: {\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n}));\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState();\n  const [chatType, setChatType] = useState();\n  const [clientId, setClientId] = useState();\n  const [currChannel, setCurrChannel] = useState([]);\n  const selectUser = (user) => {\n    // setCurrChannel(channel);\n    setCurrentUser(user);\n  };\n  const clearUser = () => {\n    setCurrentUser();\n  };\n  const setChatTypeFunc = (type) => {\n    setChatType(type);\n  };\n  const getClientId = (id) => {\n    setClientId(id);\n  };\n  const classes = useStyles();\n  let theme = createTheme({\n    typography: {\n      fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    },\n  });\n  theme = responsiveFontSizes(theme);\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Router>\n        <Navbar></Navbar>\n        <Box\n          paddingTop=\"50.86px\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          maxWidth=\"100vw\"\n          overflow=\"hidden\"\n          className={classes.container}\n        >\n          <Box\n            position=\"fixed\"\n            width=\"100vw\"\n            height=\"100vh\"\n            className={classes.backDrop}\n          ></Box>\n          <Box\n            justifyContent=\"center\"\n            display=\"flex\"\n            zIndex=\"2\"\n            maxWidth=\"1200px\"\n            width=\"100%\"\n          >\n            <ThemeProvider theme={theme}>\n              <CssBaseline />\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home\n                    clearUser={clearUser}\n                    setChatType={setChatTypeFunc}\n                  ></Home>\n                </Route>\n                {currentUser ? (\n                  <>\n                    <Route path=\"/chat/group\">\n                      <Group\n                        setChatType={setChatType}\n                        clientId={clientId}\n                        currentUser={currentUser}\n                      ></Group>\n                    </Route>\n                    <Route path=\"/chat/individual\">\n                      <Individual\n                        setChatType={setChatType}\n                        clientId={clientId}\n                        currentUser={currentUser}\n                      ></Individual>\n                    </Route>\n                  </>\n                ) : (\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    padding=\"20px\"\n                    width=\"100%\"\n                  >\n                    <CupSelect\n                      getClientId={getClientId}\n                      currChannel={currChannel}\n                      chatType={chatType}\n                      selectUser={selectUser}\n                    ></CupSelect>\n                  </Box>\n                )}\n              </Switch>\n            </ThemeProvider>\n          </Box>\n        </Box>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","export default __webpack_public_path__ + \"static/media/affogato.398ec518.png\";"],"sourceRoot":""}