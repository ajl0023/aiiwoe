{"version":3,"sources":["images/cups/affogato.png","images/cups/black.png","images/cups/cafe.png","images/cups/cap.png","images/cups/decaf.png","images/cups/espresso.png","images/cups/latte.png","images/cups/mocha.png","images/cups/rist.png","ably.js","images/cups/cups.js","components/CupSelect/CupSelect.jsx","components/ChatBox/ChatBox.jsx","components/ChatTable/ChatTable.jsx","components/UserBar/UserBar.js","components/Group/Group.jsx","images/logo.png","components/Home/Home.jsx","components/Individual/Users/Users.js","components/Individual/Individual.js","components/Navbar/images/logo.png","components/Navbar/Navbar.js","images/background.png","App.js","index.js","components/ChatBox/ChatBox.module.scss","components/ChatTable/ChatTable.module.scss"],"names":["currChannel","clientId","Math","random","toString","generateId","id","name","roomid","channel","Ably","key","channels","get","attach","err","console","error","affogato","require","black","cafe","cap","decaf","espresso","latte","mocha","rist","cupObj","cups","map","cup","default","match","useStyles","makeStyles","theme","chatTable","borderRadius","width","height","background","containerHeader","color","padding","cupImage","CupSelect","props","location","useLocation","classes","useState","taken","setTaken","useEffect","token","chatType","pathname","split","axios","post","type","then","data","presence","subscribe","presenceMsg","members","userObj","reduce","obj","user","unsubscribe","Box","maxWidth","display","alignItems","justifyContent","bgcolor","Typography","variant","noWrap","className","Object","keys","length","gridGap","overflow","style","opacity","pointer","src","alt","onClick","selectUser","chatBox","objectFit","mainInput","backgroundColor","sendButton","ChatBox","useTheme","matches","useMediaQuery","breakpoints","up","useMemo","input","setInput","messages","setMessages","sendMsg","publish","text","currentUser","prev","copy","push","flexDirection","position","messageContainer","msg","i","messageOut","messageIn","styles","FormControl","fullWidth","InputLabel","paddingLeft","htmlFor","TextField","onKeyUp","e","code","value","onChange","target","Button","disabled","content","paddingBottom","typingBubble","right","top","gap","ChatTable","circleArr","setCircleArr","theta","PI","containerRef","useRef","circleRef","resize","mainHeight","current","parseInt","window","getComputedStyle","slice","radius","offsetWidth","circleArray","users","circle","posx","round","cos","posy","sin","left","onresize","paddingRight","ref","ele","typingUsers","flexShrink","UserBar","Fragment","Group","useSubscribe","enter","Grid","spacing","container","xs","sm","item","buttonMain","margin","backDrop","contentContainer","zIndex","buttonHeader","textTransform","link","textDecoration","description","fontSize","logo","Home","clearUser","Container","align","buttonContainer","to","setChatType","Users","borderBottom","Individual","Hidden","xsDown","cursor","withRouter","history","useHistory","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","setTypingUsers","setUsers","timeout","clearTimeout","setTimeout","usersCopy","detach","App","setCurrentUser","setClientId","setChatTypeFunc","getClientId","createTheme","typography","fontFamily","join","responsiveFontSizes","ThemeProvider","paddingTop","CssBaseline","exact","path","render","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3c0f7dc0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/affogato.398ec518.png\";","export default __webpack_public_path__ + \"static/media/black.ec640ce9.png\";","export default __webpack_public_path__ + \"static/media/cafe.ddb7ac5b.png\";","export default __webpack_public_path__ + \"static/media/cap.b5e88f08.png\";","export default __webpack_public_path__ + \"static/media/decaf.7521de77.png\";","export default __webpack_public_path__ + \"static/media/espresso.1c8c2501.png\";","export default __webpack_public_path__ + \"static/media/latte.d99c1f52.png\";","export default __webpack_public_path__ + \"static/media/mocha.c1adc1f0.png\";","export default __webpack_public_path__ + \"static/media/rist.14fb25c5.png\";","import * as Ably from \"ably\";\r\nlet currChannel;\r\nlet clientId = Math.random().toString();\r\nconst generateId = (id, name) => {\r\n  if (!currChannel) {\r\n    var ably = new Ably.Realtime({\r\n      key: \"8ZlqBg.IDAVaA:2m8tkZT0rhHi58Mv\",\r\n      clientId: clientId,\r\n    });\r\n    let roomid = id;\r\n\r\n    var channel = ably.channels.get(roomid);\r\n\r\n    channel.attach(function (err) {\r\n      if (err) {\r\n        return console.error(\"Error attaching to the channel\");\r\n      }\r\n    });\r\n    currChannel = channel;\r\n    return channel;\r\n  }\r\n  return currChannel;\r\n};\r\n\r\nexport { generateId, clientId };\r\n","const affogato = require(\"./affogato.png\");\r\n\r\nconst black = require(\"./black.png\");\r\nconst cafe = require(\"./cafe.png\");\r\nconst cap = require(\"./cap.png\");\r\nconst decaf = require(\"./decaf.png\");\r\nconst espresso = require(\"./espresso.png\");\r\nconst latte = require(\"./latte.png\");\r\nconst mocha = require(\"./mocha.png\");\r\nconst rist = require(\"./rist.png\");\r\nexport const cupObj = {\r\n  affogato,\r\n  black,\r\n  cafe,\r\n  cap,\r\n  decaf,\r\n  espresso,\r\n  latte,\r\n  mocha,\r\n  rist,\r\n};\r\nexport const cups = [\r\n  affogato,\r\n  black,\r\n  cafe,\r\n  cap,\r\n  decaf,\r\n  espresso,\r\n  latte,\r\n  mocha,\r\n  rist,\r\n].map((cup) => {\r\n  const regex = /\\/(\\w+)\\./;\r\n\r\n  cup[\"name\"] = cup.default.match(regex)[1];\r\n  return cup;\r\n});\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { generateId } from \"../../ably.js\";\r\nimport { cups } from \"../../images/cups/cups\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    borderRadius: \"50%\",\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    background: \"red\",\r\n  },\r\n  containerHeader: {\r\n    color: \"white\",\r\n    padding: \"5px 15px\",\r\n  },\r\n  cupImage: {\r\n    width: \"40px\",\r\n  },\r\n}));\r\n\r\nconst CupSelect = (props) => {\r\n  const location = useLocation();\r\n\r\n  const classes = useStyles();\r\n  const [taken, setTaken] = useState();\r\n\r\n  useEffect(() => {\r\n    const chatType = location.pathname.split(\"/\")[2];\r\n\r\n    function getToken(token) {\r\n      axios\r\n        .post(\"/token\", {\r\n          token,\r\n          type: chatType,\r\n        })\r\n        .then((data) => {\r\n          generateId(data.data.token).presence.subscribe(function (\r\n            presenceMsg\r\n          ) {\r\n            generateId(data.data.token).presence.get(function (err, members) {\r\n              const userObj = members.reduce((obj, user) => {\r\n                obj[user.data] = user;\r\n                return obj;\r\n              }, {});\r\n              setTaken(userObj);\r\n            });\r\n          });\r\n        });\r\n    }\r\n    getToken();\r\n    return () => {\r\n      generateId().unsubscribe();\r\n      setTaken(null);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      maxWidth=\"600px\"\r\n      width=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Box width=\"100%\">\r\n        <Box\r\n          bgcolor=\"black\"\r\n          width=\"100%\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <Typography\r\n            variant=\"caption\"\r\n            noWrap\r\n            className={classes.containerHeader}\r\n          >\r\n            Select an avatar\r\n          </Typography>\r\n          <Typography\r\n            variant=\"caption\"\r\n            noWrap\r\n            className={classes.containerHeader}\r\n          >\r\n            Users in Room : {taken ? Object.keys(taken).length : 0}\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          padding=\"15px 20px\"\r\n          alignItems=\"center\"\r\n          bgcolor=\"white\"\r\n          display=\"flex\"\r\n          gridGap=\"15px\"\r\n          overflow=\"auto\"\r\n        >\r\n          {cups.map((cup) => {\r\n            if (taken && taken[cup.name]) {\r\n              return (\r\n                <img\r\n                  key={cup.name}\r\n                  style={{\r\n                    opacity: \"60%\",\r\n                    pointer: \"none\",\r\n                  }}\r\n                  className={classes.cupImage}\r\n                  src={cup.default}\r\n                  alt=\"\"\r\n                />\r\n              );\r\n            }\r\n\r\n            return (\r\n              <img\r\n                key={cup.name}\r\n                onClick={() => props.selectUser(cup)}\r\n                className={classes.cupImage}\r\n                src={cup.default}\r\n                alt=\"\"\r\n              />\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CupSelect;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  TextField,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { clientId, generateId } from \"../../ably\";\r\nimport { cupObj } from \"../../images/cups/cups\";\r\nimport styles from \"./ChatBox.module.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatBox: {\r\n    background: \"rgba(255, 255, 255, 0.5)\",\r\n    height: \"100%\",\r\n  },\r\n  cup: {\r\n    width: \"40px\",\r\n    height: \"40px\",\r\n    objectFit: \"contain\",\r\n  },\r\n  mainInput: {\r\n    display: \"flex\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n    \"& .MuiInputBase-root\": {},\r\n  },\r\n  sendButton: {\r\n    \"&.MuiButton-contained.Mui-disabled\": {\r\n      background: \"rgba(255, 255, 255, 0.2)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatBox = (props) => {\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const channel = useMemo(() => {\r\n    return generateId();\r\n  });\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const classes = useStyles();\r\n  const handleMsg = (e) => {\r\n    channel.publish(\"typing\", clientId);\r\n    setInput(e.target.value);\r\n  };\r\n  const sendMsg = () => {\r\n    channel.publish(\"message sent\", { text: input, ...props.currentUser });\r\n\r\n    setInput(\"\");\r\n  };\r\n  useEffect(() => {\r\n    // getSocket.on(\"sendMessage\", (msg) => {\r\n    //\r\n    // });\r\n\r\n    channel.subscribe(function (data) {\r\n      if (data.name === \"message sent\") {\r\n        setMessages((prev) => {\r\n          const copy = [...prev];\r\n          copy.push(data);\r\n          return copy;\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      width=\"500px\"\r\n      alignItems={matches ? \"space-between\" : \"center\"}\r\n    >\r\n      <Box\r\n        className={classes.chatBox}\r\n        width=\"100%\"\r\n        position=\"relative\"\r\n        height=\"100%\"\r\n      >\r\n        <Box height=\"100%\" overflow=\"auto\" className={classes.messageContainer}>\r\n          {messages.map((msg, i) => {\r\n            return (\r\n              <Box\r\n                key={i}\r\n                gridGap=\"5px\"\r\n                alignItems=\"center\"\r\n                display=\"flex\"\r\n                flexDirection={\r\n                  msg.clientId === clientId ? \"row\" : \"row-reverse\"\r\n                }\r\n                justifyContent=\"start\"\r\n                className={\r\n                  msg.clientId === clientId\r\n                    ? classes.messageOut\r\n                    : classes.messageIn\r\n                }\r\n                padding=\"5px 15px\"\r\n              >\r\n                <img\r\n                  className={classes.cup}\r\n                  src={cupObj[msg.data.name].default}\r\n                  alt=\"\"\r\n                />\r\n                <Box\r\n                  position=\"relative\"\r\n                  padding=\"5px 15px\"\r\n                  bgcolor={msg.clientId === clientId ? \"white\" : \"#c06c48\"}\r\n                >\r\n                  <li>{msg.data.text}</li>\r\n                  <div\r\n                    className={\r\n                      styles[\r\n                        msg.clientId === clientId ? \"arrow-right\" : \"arrow-left\"\r\n                      ]\r\n                    }\r\n                  ></div>\r\n                </Box>\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\r\n        <FormControl variant=\"filled\" fullWidth>\r\n          <InputLabel\r\n            style={{ paddingLeft: \"20px\" }}\r\n            htmlFor=\"outlined-adornment-amount\"\r\n          >\r\n            Type Here...\r\n          </InputLabel>\r\n          <TextField\r\n            onKeyUp={(e) => {\r\n              if (e.code === \"Enter\") {\r\n                sendMsg(e);\r\n              }\r\n            }}\r\n            className={classes.mainInput}\r\n            value={input}\r\n            variant=\"filled\"\r\n            onChange={handleMsg}\r\n            id=\"outlined-adornment-amount\"\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          className={classes.sendButton}\r\n          disabled={input.length === 0}\r\n          onClick={sendMsg}\r\n          variant=\"contained\"\r\n        >\r\n          Send\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import { Box, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { cupObj } from \"../../images/cups/cups\";\r\nimport style from \"./ChatTable.module.scss\";\r\nimport { clientId } from \"../../ably\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    width: \"400px\",\r\n\r\n    background: \"rgba(80, 41, 0, 0.7)\",\r\n    borderRadius: \"50%\",\r\n    position: \"relative\",\r\n    \"&::before\": {\r\n      content: \"''\",\r\n      display: \"block\",\r\n      paddingBottom: \"100%\",\r\n    },\r\n  },\r\n  typingBubble: {\r\n    width: \"25px\",\r\n    height: \"10px\",\r\n    position: \"absolute\",\r\n    right: \"-4px\",\r\n    top: \"-5px\",\r\n    background: \"white\",\r\n    borderRadius: \"14px\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    gap: \"2px\",\r\n    \"& > *\": {\r\n      background: \"black\",\r\n      borderRadius: \"50%\",\r\n      width: \"4px\",\r\n      height: \"4px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ChatTable = (props) => {\r\n  const [circleArr, setCircleArr] = useState([]);\r\n  const theme = useTheme();\r\n\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  var theta = [\r\n    Math.PI / 2,\r\n    Math.PI / 4,\r\n    2 * Math.PI,\r\n    7 * (Math.PI / 4),\r\n    (3 * Math.PI) / 2,\r\n    5 * (Math.PI / 4),\r\n    3 * (Math.PI / 4),\r\n    Math.PI,\r\n  ];\r\n  const containerRef = useRef();\r\n\r\n  const classes = useStyles();\r\n  const cupPos = useMemo(() => {});\r\n  const circleRef = useRef([]);\r\n  function resize() {\r\n    setCircleArr(() => {\r\n      var mainHeight = containerRef.current\r\n        ? parseInt(\r\n            window.getComputedStyle(containerRef.current).height.slice(0, -2)\r\n          )\r\n        : 0;\r\n      circleRef.current = [];\r\n      var radius = containerRef.current.offsetWidth / 2 + 20;\r\n\r\n      let circleArray = circleRef.current;\r\n      for (var i = 0; i < props.users.length; i++) {\r\n        var circle = { style: {} };\r\n        circle.src = cupObj[props.users[i].data].default;\r\n        circle.name = props.users[i].data;\r\n        circle.clientId = props.users[i].clientId;\r\n        circleArray.push(circle);\r\n        circleArray[i].posx = Math.round(radius * Math.cos(theta[i])) + \"px\";\r\n        circleArray[i].posy = Math.round(radius * Math.sin(theta[i])) + \"px\";\r\n        circleArray[i].style.position = \"absolute\";\r\n        circleArray[i].style.top =\r\n          mainHeight / 2 -\r\n          parseInt(circleArray[i].posy.slice(0, -2)) -\r\n          40 +\r\n          \"px\";\r\n        circleArray[i].style.left =\r\n          mainHeight / 2 +\r\n          parseInt(circleArray[i].posx.slice(0, -2)) -\r\n          20 +\r\n          \"px\";\r\n      }\r\n      return circleArray;\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    resize();\r\n    window.onresize = () => {\r\n      resize();\r\n    };\r\n  }, [props.users]);\r\n\r\n  return (\r\n    <Box paddingRight=\"40px\">\r\n      <Box\r\n        display={matches ? \"flex\" : \"none\"}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box\r\n          ref={containerRef}\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          className={classes.chatTable}\r\n        >\r\n          {circleArr.map((ele) => {\r\n            return (\r\n              <Box>\r\n                <Box\r\n                  display={\r\n                    props.typingUsers[ele.clientId] && ele.clientId !== clientId\r\n                      ? \"flex\"\r\n                      : \"none\"\r\n                  }\r\n                  className={classes.typingBubble}\r\n                >\r\n                  <div></div>\r\n                  <div></div>\r\n                  <div></div>\r\n                </Box>\r\n                <img\r\n                  key={ele.name}\r\n                  className={`${style[\"circle\"]}`}\r\n                  src={ele.src}\r\n                  style={{\r\n                    ...ele.style,\r\n                  }}\r\n                  alt=\"\"\r\n                />\r\n              </Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatTable;\r\n","import { Box, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { cupObj } from \"../../images/cups/cups\";\nimport { clientId } from \"../../ably\";\nconst useStyles = makeStyles((theme) => ({\n  cup: {\n    flexShrink: \"0.5\",\n  },\n  chatTable: {\n    borderRadius: \"50%\",\n    width: \"200px\",\n    height: \"200px\",\n    background: \"red\",\n  },\n  typingBubble: {\n    width: \"25px\",\n    height: \"10px\",\n    position: \"absolute\",\n    right: \"-4px\",\n    top: \"-5px\",\n    background: \"white\",\n    borderRadius: \"14px\",\n\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: \"2px\",\n    \"& > *\": {\n      background: \"black\",\n      borderRadius: \"50%\",\n      width: \"4px\",\n      height: \"4px\",\n    },\n  },\n}));\nconst UserBar = (props) => {\n  const [currentUser, setCurrentUser] = useState();\n  const theme = useTheme();\n\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  useEffect(() => {}, []);\n  const classes = useStyles();\n  const selectUser = (user) => {\n    setCurrentUser(user);\n  };\n  return (\n    <Box width=\"100%\" display={matches ? \"none\" : \"flex\"} gridGap=\"15px\">\n      {props.users.map((user) => {\n        return (\n          <React.Fragment key={user.data}>\n            <Box\n              width=\"10%\"\n              display=\"flex\"\n              position=\"relative\"\n              flexDirection=\"column\"\n            >\n              <Box\n                display={\n                  props.typingUsers[user.clientId] && user.clientId !== clientId\n                    ? \"flex\"\n                    : \"none\"\n                }\n                className={classes.typingBubble}\n              >\n                <div></div>\n                <div></div>\n                <div></div>\n              </Box>\n              <img\n                className={classes.cup}\n                src={cupObj[user.data].default}\n                alt=\"\"\n              />\n            </Box>\n          </React.Fragment>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default UserBar;\n","import { Box, Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { generateId } from \"../../ably.js\";\r\nimport ChatBox from \"../ChatBox/ChatBox\";\r\nimport ChatTable from \"../ChatTable/ChatTable\";\r\nimport UserBar from \"../UserBar/UserBar\";\r\nimport { useSubscribe } from \"../../App.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  chatTable: {\r\n    borderRadius: \"50%\",\r\n    width: \"200px\",\r\n    height: \"200px\",\r\n    background: \"red\",\r\n  },\r\n}));\r\nconst Group = (props) => {\r\n  const { users, typingUsers } = useSubscribe(props);\r\n  const [room, setRoom] = useState();\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  useEffect(() => {\r\n    generateId().presence.enter(props.currentUser.name);\r\n  }, [props.currentUser.name]);\r\n  useEffect(() => {}, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        width=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        padding=\"30px 15px\"\r\n      >\r\n        <Grid\r\n          style={{ height: \"100%\" }}\r\n          spacing={1}\r\n          container\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid xs={12} sm={6} item>\r\n            <ChatTable\r\n              typingUsers={typingUsers}\r\n              clientId={props.clientId}\r\n              users={users}\r\n            ></ChatTable>\r\n\r\n            <UserBar typingUsers={typingUsers} users={users}></UserBar>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            alignItems={matches ? \"center\" : \"flex-start\"}\r\n            justifyContent=\"center\"\r\n            style={{ height: matches ? \"80%\" : \"80%\" }}\r\n            xs={12}\r\n            sm={6}\r\n            item\r\n          >\r\n            <ChatBox\r\n              clientId={props.clientId}\r\n              currentUser={props.currentUser}\r\n            ></ChatBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","export default __webpack_public_path__ + \"static/media/logo.3b2d4623.png\";","import { Box, Button, Container, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  buttonMain: {\r\n    \"& > *\": {\r\n      width: \"100%\",\r\n      margin: theme.spacing(1),\r\n      backgroundColor: \"rgb(186 167 156)\",\r\n    },\r\n  },\r\n  backDrop: {\r\n    backgroundColor: \"rgba(0,0,0,0.4)\",\r\n  },\r\n  contentContainer: {\r\n    zIndex: \"2\",\r\n  },\r\n  buttonHeader: {\r\n    textTransform: \"uppercase\",\r\n  },\r\n  link: {\r\n    width: \"100%\",\r\n    textDecoration: \"none\",\r\n\r\n    display: \"block\",\r\n  },\r\n  description: {\r\n    fontSize: \"2em\",\r\n  },\r\n  logo: {\r\n    maxWidth: \"70%\",\r\n    width: \"400px\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\nconst Home = (props) => {\r\n  useEffect(() => {\r\n    props.clearUser();\r\n  }, []);\r\n  const classes = useStyles();\r\n  return (\r\n    <Container className={classes.contentContainer}>\r\n      <Box\r\n        gridGap=\"20px\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n        color=\"white\"\r\n      >\r\n        <img className={classes.logo} src={logo} alt=\"\" />\r\n        <Typography align=\"center\" className={classes.description}>\r\n          Experience the complicated side of love, together.\r\n        </Typography>\r\n        <Box className={classes.buttonContainer}>\r\n          <Typography className={classes.buttonHeader} align=\"center\">\r\n            Match me with a:\r\n          </Typography>\r\n          <Box className={classes.buttonMain}>\r\n            <Link to=\"/chat/group\" className={classes.link}>\r\n              <Button\r\n                onClick={() => {\r\n                  props.setChatType(\"group\");\r\n                }}\r\n                fullWidth\r\n                variant=\"contained\"\r\n              >\r\n                Group\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to=\"/chat/individual\" className={classes.link}>\r\n              <Button fullWidth variant=\"contained\">\r\n                Individual\r\n              </Button>\r\n            </Link>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React, { useEffect } from \"react\";\nimport { cupObj } from \"../../../images/cups/cups\";\n\nconst useStyles = makeStyles((theme) => ({\n  cup: {\n    width: \"60px\",\n  },\n}));\nconst Users = (props) => {\n  useEffect(() => {}, []);\n  const classes = useStyles();\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-start\"\n      height=\"100%\"\n      width=\"100%\"\n    >\n      <Box bgcolor=\"rgba(255, 255, 255, 0.5)\">\n        {props.users.map((user, i) => {\n          return (\n            <Box\n              key={user.data}\n              color=\"white\"\n              padding=\"5px 15px\"\n              display=\"flex\"\n              gridGap=\"15px\"\n              width=\"100%\"\n              alignItems=\"center\"\n              borderBottom={\n                i !== props.users.length - 1 ? \"1px solid black\" : \"\"\n              }\n            >\n              <img\n                className={classes.cup}\n                src={cupObj[user.data].default}\n                alt=\"\"\n              />\n              <Typography>{user.data}</Typography>\n            </Box>\n          );\n        })}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Users;\n","import { Box, Grid, Hidden, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { generateId } from \"../../ably.js\";\nimport { useSubscribe } from \"../../App.js\";\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport UserBar from \"../UserBar/UserBar\";\nimport Users from \"./Users/Users\";\nconst useStyles = makeStyles((theme) => ({\n  chatTable: {\n    borderRadius: \"50%\",\n    width: \"200px\",\n    height: \"200px\",\n    background: \"red\",\n  },\n}));\nconst Individual = (props) => {\n  const { users, typingUsers } = useSubscribe(props);\n  const [currentUser, setCurrentUser] = useState();\n  const theme = useTheme();\n  const classes = useStyles();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  useEffect(() => {\n    generateId().presence.enter(props.currentUser.name);\n  }, [props.currentUser.name]);\n\n  return (\n    <>\n      <Grid\n        container\n        width=\"100%\"\n        height=\"100%\"\n        display=\"flex\"\n        spacing={2}\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        style={{ padding: \"30px 15px\" }}\n      >\n        <Grid\n          justifyContent=\"center\"\n          item\n          style={{ height: matches ? \"80%\" : \"\" }}\n          container\n          xs={12}\n          sm={4}\n          alignItems=\"flex-start\"\n        >\n          <Hidden xsDown>\n            <Box display=\"flex\" width=\"100%\">\n              <Users typingUsers={typingUsers} users={users}></Users>\n            </Box>\n          </Hidden>\n\n          <UserBar typingUsers={typingUsers} users={users}></UserBar>\n        </Grid>\n        <Grid\n          container\n          alignItems={matches ? \"center\" : \"flex-start\"}\n          justifyContent=\"center\"\n          style={{ height: matches ? \"80%\" : \"80%\" }}\n          item\n          xs={12}\n          sm={8}\n        >\n          <ChatBox\n            clientId={props.clientId}\n            currentUser={props.currentUser}\n          ></ChatBox>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Individual;\n","export default __webpack_public_path__ + \"static/media/logo.76c5cc2c.png\";","import { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\nimport logo from \"./images/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    width: \"100px\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Navbar = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  return (\n    <Box\n      position=\"absolute\"\n      top=\"0\"\n      width=\"100%\"\n      zIndex=\"3\"\n      bgcolor=\"#512905\"\n      padding=\"5px 15px\"\n    >\n      <img\n        onClick={() => {\n          history.push(\"/\");\n        }}\n        className={classes.logo}\n        src={logo}\n        alt=\"\"\n      />\n    </Box>\n  );\n};\n\nexport default withRouter(Navbar);\n","export default __webpack_public_path__ + \"static/media/background.23f7c3b9.png\";","import { Box, CssBaseline } from \"@material-ui/core\";\nimport {\n  createTheme,\n  makeStyles,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport CupSelect from \"./components/CupSelect/CupSelect\";\nimport Group from \"./components/Group/Group\";\nimport Home from \"./components/Home/Home\";\nimport Individual from \"./components/Individual/Individual\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport background from \"./images/background.png\";\nimport { generateId } from \"./ably\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    backgroundImage: `url(${background})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"center center\",\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n  },\n  buttonMain: {\n    \"& > *\": {\n      width: \"100%\",\n      margin: theme.spacing(1),\n      backgroundColor: \"rgb(186 167 156)\",\n    },\n  },\n  backDrop: {\n    backgroundColor: \"rgba(0,0,0,0.4)\",\n  },\n}));\nexport function useSubscribe(props) {\n  const [typingUsers, setTypingUsers] = useState({});\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    props.setChatType(\"group\");\n    const channel = generateId();\n    const copy = {};\n    let timeout;\n    channel.subscribe((data) => {\n      if (data.name === \"typing\") {\n        setTypingUsers((prev) => {\n          copy[data.data] = true;\n          return copy;\n        });\n        clearTimeout(timeout);\n        timeout = setTimeout(() => {\n          setTypingUsers({});\n        }, 1200);\n      }\n    });\n\n    channel.presence.subscribe((msg) => {\n      channel.presence.get((err, members) => {\n        const usersCopy = [...users];\n\n        usersCopy.push(...members);\n        setUsers(usersCopy);\n      });\n    });\n    return () => {\n      channel.detach();\n    };\n  }, []);\n  return { users, typingUsers };\n}\n\nconst App = () => {\n  const [currentUser, setCurrentUser] = useState();\n  const [chatType, setChatType] = useState();\n  const [clientId, setClientId] = useState();\n  const [currChannel, setCurrChannel] = useState([]);\n  const selectUser = (user) => {\n    // setCurrChannel(channel);\n    setCurrentUser(user);\n  };\n  const clearUser = () => {\n    setCurrentUser();\n  };\n  const setChatTypeFunc = (type) => {\n    setChatType(type);\n  };\n  const getClientId = (id) => {\n    setClientId(id);\n  };\n  const classes = useStyles();\n  let theme = createTheme({\n    typography: {\n      fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    },\n  });\n  theme = responsiveFontSizes(theme);\n  useEffect(() => {}, []);\n  return (\n    <>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <Navbar></Navbar>\n          <Box\n            paddingTop=\"50.86px\"\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            maxWidth=\"100vw\"\n            overflow=\"hidden\"\n            className={classes.container}\n          >\n            <Box\n              position=\"fixed\"\n              width=\"100vw\"\n              height=\"100vh\"\n              className={classes.backDrop}\n            ></Box>\n            <Box\n              justifyContent=\"center\"\n              display=\"flex\"\n              zIndex=\"2\"\n              maxWidth=\"1200px\"\n              width=\"100%\"\n              height=\"100%\"\n            >\n              <CssBaseline />\n\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => (\n                    <Home\n                      clearUser={clearUser}\n                      setChatType={setChatTypeFunc}\n                    ></Home>\n                  )}\n                ></Route>\n\n                <Route path=\"/chat/group\">\n                  {currentUser ? (\n                    <Group\n                      setChatType={setChatType}\n                      clientId={clientId}\n                      currentUser={currentUser}\n                    ></Group>\n                  ) : (\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      padding=\"20px\"\n                      width=\"100%\"\n                    >\n                      <CupSelect\n                        getClientId={getClientId}\n                        currChannel={currChannel}\n                        chatType={chatType}\n                        selectUser={selectUser}\n                      ></CupSelect>\n                    </Box>\n                  )}\n                </Route>\n                <Route path=\"/chat/individual\">\n                  {currentUser ? (\n                    <Individual\n                      useSubscribe={useSubscribe}\n                      setChatType={setChatType}\n                      clientId={clientId}\n                      currentUser={currentUser}\n                    ></Individual>\n                  ) : (\n                    <Box\n                      display=\"flex\"\n                      justifyContent=\"center\"\n                      padding=\"20px\"\n                      width=\"100%\"\n                    >\n                      <CupSelect\n                        getClientId={getClientId}\n                        currChannel={currChannel}\n                        chatType={chatType}\n                        selectUser={selectUser}\n                      ></CupSelect>\n                    </Box>\n                  )}\n                </Route>\n              </Switch>\n            </Box>\n          </Box>\n        </ThemeProvider>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow-right\":\"ChatBox_arrow-right__2bSSk\",\"arrow-left\":\"ChatBox_arrow-left__y7KiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"ChatTable_circle__17_TH\"};"],"sourceRoot":""}